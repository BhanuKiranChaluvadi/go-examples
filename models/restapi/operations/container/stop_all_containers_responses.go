// Code generated by go-swagger; DO NOT EDIT.

package container

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/runtime/middleware"

	"universal-robots.com/urservice/models"
)

// StopAllContainersOKCode is the HTTP code returned for type StopAllContainersOK
const StopAllContainersOKCode int = 200

/*
StopAllContainersOK Container Port Mapping.

swagger:response stopAllContainersOK
*/
type StopAllContainersOK struct {
}

// NewStopAllContainersOK creates StopAllContainersOK with default headers values
func NewStopAllContainersOK() *StopAllContainersOK {

	return &StopAllContainersOK{}
}

// WriteResponse to the client
func (o *StopAllContainersOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(200)
}

func (o *StopAllContainersOK) StopAllContainersResponder() {}

/*
StopAllContainersDefault error

swagger:response stopAllContainersDefault
*/
type StopAllContainersDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *models.ErrorResponse `json:"body,omitempty"`
}

// NewStopAllContainersDefault creates StopAllContainersDefault with default headers values
func NewStopAllContainersDefault(code int) *StopAllContainersDefault {
	if code <= 0 {
		code = 500
	}

	return &StopAllContainersDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the stop all containers default response
func (o *StopAllContainersDefault) WithStatusCode(code int) *StopAllContainersDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the stop all containers default response
func (o *StopAllContainersDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the stop all containers default response
func (o *StopAllContainersDefault) WithPayload(payload *models.ErrorResponse) *StopAllContainersDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the stop all containers default response
func (o *StopAllContainersDefault) SetPayload(payload *models.ErrorResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *StopAllContainersDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

func (o *StopAllContainersDefault) StopAllContainersResponder() {}

type StopAllContainersNotImplementedResponder struct {
	middleware.Responder
}

func (*StopAllContainersNotImplementedResponder) StopAllContainersResponder() {}

func StopAllContainersNotImplemented() StopAllContainersResponder {
	return &StopAllContainersNotImplementedResponder{
		middleware.NotImplemented(
			"operation authentication.StopAllContainers has not yet been implemented",
		),
	}
}

type StopAllContainersResponder interface {
	middleware.Responder
	StopAllContainersResponder()
}
