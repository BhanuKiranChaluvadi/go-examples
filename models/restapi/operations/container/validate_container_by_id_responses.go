// Code generated by go-swagger; DO NOT EDIT.

package container

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/runtime/middleware"

	"universal-robots.com/urservice/models"
)

// ValidateContainerByIDOKCode is the HTTP code returned for type ValidateContainerByIDOK
const ValidateContainerByIDOKCode int = 200

/*
ValidateContainerByIDOK Container Port Mapping.

swagger:response validateContainerByIdOK
*/
type ValidateContainerByIDOK struct {
}

// NewValidateContainerByIDOK creates ValidateContainerByIDOK with default headers values
func NewValidateContainerByIDOK() *ValidateContainerByIDOK {

	return &ValidateContainerByIDOK{}
}

// WriteResponse to the client
func (o *ValidateContainerByIDOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(200)
}

func (o *ValidateContainerByIDOK) ValidateContainerByIDResponder() {}

/*
ValidateContainerByIDDefault error

swagger:response validateContainerByIdDefault
*/
type ValidateContainerByIDDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *models.ErrorResponse `json:"body,omitempty"`
}

// NewValidateContainerByIDDefault creates ValidateContainerByIDDefault with default headers values
func NewValidateContainerByIDDefault(code int) *ValidateContainerByIDDefault {
	if code <= 0 {
		code = 500
	}

	return &ValidateContainerByIDDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the validate container by Id default response
func (o *ValidateContainerByIDDefault) WithStatusCode(code int) *ValidateContainerByIDDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the validate container by Id default response
func (o *ValidateContainerByIDDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the validate container by Id default response
func (o *ValidateContainerByIDDefault) WithPayload(payload *models.ErrorResponse) *ValidateContainerByIDDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the validate container by Id default response
func (o *ValidateContainerByIDDefault) SetPayload(payload *models.ErrorResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ValidateContainerByIDDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

func (o *ValidateContainerByIDDefault) ValidateContainerByIDResponder() {}

type ValidateContainerByIDNotImplementedResponder struct {
	middleware.Responder
}

func (*ValidateContainerByIDNotImplementedResponder) ValidateContainerByIDResponder() {}

func ValidateContainerByIDNotImplemented() ValidateContainerByIDResponder {
	return &ValidateContainerByIDNotImplementedResponder{
		middleware.NotImplemented(
			"operation authentication.ValidateContainerByID has not yet been implemented",
		),
	}
}

type ValidateContainerByIDResponder interface {
	middleware.Responder
	ValidateContainerByIDResponder()
}
