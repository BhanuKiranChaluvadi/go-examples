// Code generated by go-swagger; DO NOT EDIT.

package artifact

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/runtime/middleware"

	"universal-robots.com/urservice/models"
)

// GetArtifactActualNameByPathOKCode is the HTTP code returned for type GetArtifactActualNameByPathOK
const GetArtifactActualNameByPathOKCode int = 200

/*
GetArtifactActualNameByPathOK artifact name

swagger:response getArtifactActualNameByPathOK
*/
type GetArtifactActualNameByPathOK struct {

	/*
	  In: Body
	*/
	Payload string `json:"body,omitempty"`
}

// NewGetArtifactActualNameByPathOK creates GetArtifactActualNameByPathOK with default headers values
func NewGetArtifactActualNameByPathOK() *GetArtifactActualNameByPathOK {

	return &GetArtifactActualNameByPathOK{}
}

// WithPayload adds the payload to the get artifact actual name by path o k response
func (o *GetArtifactActualNameByPathOK) WithPayload(payload string) *GetArtifactActualNameByPathOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get artifact actual name by path o k response
func (o *GetArtifactActualNameByPathOK) SetPayload(payload string) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetArtifactActualNameByPathOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	payload := o.Payload
	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}

func (o *GetArtifactActualNameByPathOK) GetArtifactActualNameByPathResponder() {}

/*
GetArtifactActualNameByPathDefault error

swagger:response getArtifactActualNameByPathDefault
*/
type GetArtifactActualNameByPathDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *models.ErrorResponse `json:"body,omitempty"`
}

// NewGetArtifactActualNameByPathDefault creates GetArtifactActualNameByPathDefault with default headers values
func NewGetArtifactActualNameByPathDefault(code int) *GetArtifactActualNameByPathDefault {
	if code <= 0 {
		code = 500
	}

	return &GetArtifactActualNameByPathDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the get artifact actual name by path default response
func (o *GetArtifactActualNameByPathDefault) WithStatusCode(code int) *GetArtifactActualNameByPathDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the get artifact actual name by path default response
func (o *GetArtifactActualNameByPathDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the get artifact actual name by path default response
func (o *GetArtifactActualNameByPathDefault) WithPayload(payload *models.ErrorResponse) *GetArtifactActualNameByPathDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get artifact actual name by path default response
func (o *GetArtifactActualNameByPathDefault) SetPayload(payload *models.ErrorResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetArtifactActualNameByPathDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

func (o *GetArtifactActualNameByPathDefault) GetArtifactActualNameByPathResponder() {}

type GetArtifactActualNameByPathNotImplementedResponder struct {
	middleware.Responder
}

func (*GetArtifactActualNameByPathNotImplementedResponder) GetArtifactActualNameByPathResponder() {}

func GetArtifactActualNameByPathNotImplemented() GetArtifactActualNameByPathResponder {
	return &GetArtifactActualNameByPathNotImplementedResponder{
		middleware.NotImplemented(
			"operation authentication.GetArtifactActualNameByPath has not yet been implemented",
		),
	}
}

type GetArtifactActualNameByPathResponder interface {
	middleware.Responder
	GetArtifactActualNameByPathResponder()
}
