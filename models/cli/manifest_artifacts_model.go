// Code generated by go-swagger; DO NOT EDIT.

package cli

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/spf13/cobra"
	"universal-robots.com/urservice/models"
)

// Schema cli for ManifestArtifacts

// register flags to command
func registerModelManifestArtifactsFlags(depth int, cmdPrefix string, cmd *cobra.Command) error {

	if err := registerManifestArtifactsContainers(depth, cmdPrefix, cmd); err != nil {
		return err
	}

	if err := registerManifestArtifactsPolyscopeBundles(depth, cmdPrefix, cmd); err != nil {
		return err
	}

	if err := registerManifestArtifactsWebArchives(depth, cmdPrefix, cmd); err != nil {
		return err
	}

	return nil
}

func registerManifestArtifactsContainers(depth int, cmdPrefix string, cmd *cobra.Command) error {
	if depth > maxDepth {
		return nil
	}

	// warning: containers []*Container array type is not supported by go-swagger cli yet

	return nil
}

func registerManifestArtifactsPolyscopeBundles(depth int, cmdPrefix string, cmd *cobra.Command) error {
	if depth > maxDepth {
		return nil
	}

	// warning: polyscopeBundles []*PolyscopeBundle array type is not supported by go-swagger cli yet

	return nil
}

func registerManifestArtifactsWebArchives(depth int, cmdPrefix string, cmd *cobra.Command) error {
	if depth > maxDepth {
		return nil
	}

	// warning: webArchives []*WebArchive array type is not supported by go-swagger cli yet

	return nil
}

// retrieve flags from commands, and set value in model. Return true if any flag is passed by user to fill model field.
func retrieveModelManifestArtifactsFlags(depth int, m *models.ManifestArtifacts, cmdPrefix string, cmd *cobra.Command) (error, bool) {
	retAdded := false

	err, containersAdded := retrieveManifestArtifactsContainersFlags(depth, m, cmdPrefix, cmd)
	if err != nil {
		return err, false
	}
	retAdded = retAdded || containersAdded

	err, polyscopeBundlesAdded := retrieveManifestArtifactsPolyscopeBundlesFlags(depth, m, cmdPrefix, cmd)
	if err != nil {
		return err, false
	}
	retAdded = retAdded || polyscopeBundlesAdded

	err, webArchivesAdded := retrieveManifestArtifactsWebArchivesFlags(depth, m, cmdPrefix, cmd)
	if err != nil {
		return err, false
	}
	retAdded = retAdded || webArchivesAdded

	return nil, retAdded
}

func retrieveManifestArtifactsContainersFlags(depth int, m *models.ManifestArtifacts, cmdPrefix string, cmd *cobra.Command) (error, bool) {
	if depth > maxDepth {
		return nil, false
	}
	retAdded := false

	containersFlagName := fmt.Sprintf("%v.containers", cmdPrefix)
	if cmd.Flags().Changed(containersFlagName) {
		// warning: containers array type []*Container is not supported by go-swagger cli yet
	}

	return nil, retAdded
}

func retrieveManifestArtifactsPolyscopeBundlesFlags(depth int, m *models.ManifestArtifacts, cmdPrefix string, cmd *cobra.Command) (error, bool) {
	if depth > maxDepth {
		return nil, false
	}
	retAdded := false

	polyscopeBundlesFlagName := fmt.Sprintf("%v.polyscopeBundles", cmdPrefix)
	if cmd.Flags().Changed(polyscopeBundlesFlagName) {
		// warning: polyscopeBundles array type []*PolyscopeBundle is not supported by go-swagger cli yet
	}

	return nil, retAdded
}

func retrieveManifestArtifactsWebArchivesFlags(depth int, m *models.ManifestArtifacts, cmdPrefix string, cmd *cobra.Command) (error, bool) {
	if depth > maxDepth {
		return nil, false
	}
	retAdded := false

	webArchivesFlagName := fmt.Sprintf("%v.webArchives", cmdPrefix)
	if cmd.Flags().Changed(webArchivesFlagName) {
		// warning: webArchives array type []*WebArchive is not supported by go-swagger cli yet
	}

	return nil, retAdded
}
