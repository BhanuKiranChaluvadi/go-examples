// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"bytes"
	"context"
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// WebArchive An web archive contains a folder with all web related pages.
//
// swagger:model WebArchive
type WebArchive struct {

	// Path of the folder with all web related pages. This path is relative to the zipped urcap top folder.
	//
	// Example: mywebarchive
	// Required: true
	// Max Length: 20
	// Min Length: 3
	// Pattern: ^[a-zA-Z0-9._-]+$
	Folder *string `json:"folder" yaml:"folder"`

	// Path to the main index pages for the front to load.
	MasterIndex string `json:"masterIndex,omitempty" yaml:"masterIndex,omitempty"`

	// The name of the web archive
	//
	// Example: mywebarchive
	// Required: true
	// Max Length: 27
	// Min Length: 2
	// Pattern: ^[a-zA-Z0-9._-]+$
	Name *string `json:"name" yaml:"name"`
}

// UnmarshalJSON unmarshals this object while disallowing additional properties from JSON
func (m *WebArchive) UnmarshalJSON(data []byte) error {
	var props struct {

		// Path of the folder with all web related pages. This path is relative to the zipped urcap top folder.
		//
		// Example: mywebarchive
		// Required: true
		// Max Length: 20
		// Min Length: 3
		// Pattern: ^[a-zA-Z0-9._-]+$
		Folder *string `json:"folder" yaml:"folder"`

		// Path to the main index pages for the front to load.
		MasterIndex string `json:"masterIndex,omitempty" yaml:"masterIndex,omitempty"`

		// The name of the web archive
		//
		// Example: mywebarchive
		// Required: true
		// Max Length: 27
		// Min Length: 2
		// Pattern: ^[a-zA-Z0-9._-]+$
		Name *string `json:"name" yaml:"name"`
	}

	dec := json.NewDecoder(bytes.NewReader(data))
	dec.DisallowUnknownFields()
	if err := dec.Decode(&props); err != nil {
		return err
	}

	m.Folder = props.Folder
	m.MasterIndex = props.MasterIndex
	m.Name = props.Name
	return nil
}

// Validate validates this web archive
func (m *WebArchive) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateFolder(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateName(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *WebArchive) validateFolder(formats strfmt.Registry) error {

	if err := validate.Required("folder", "body", m.Folder); err != nil {
		return err
	}

	if err := validate.MinLength("folder", "body", *m.Folder, 3); err != nil {
		return err
	}

	if err := validate.MaxLength("folder", "body", *m.Folder, 20); err != nil {
		return err
	}

	if err := validate.Pattern("folder", "body", *m.Folder, `^[a-zA-Z0-9._-]+$`); err != nil {
		return err
	}

	return nil
}

func (m *WebArchive) validateName(formats strfmt.Registry) error {

	if err := validate.Required("name", "body", m.Name); err != nil {
		return err
	}

	if err := validate.MinLength("name", "body", *m.Name, 2); err != nil {
		return err
	}

	if err := validate.MaxLength("name", "body", *m.Name, 27); err != nil {
		return err
	}

	if err := validate.Pattern("name", "body", *m.Name, `^[a-zA-Z0-9._-]+$`); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this web archive based on context it is used
func (m *WebArchive) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *WebArchive) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *WebArchive) UnmarshalBinary(b []byte) error {
	var res WebArchive
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
