// Code generated by go-swagger; DO NOT EDIT.

package cli

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"swagger-example/client/container"

	"github.com/go-openapi/swag"
	"github.com/spf13/cobra"
)

// makeOperationContainerStopAllContainersCmd returns a cmd to handle operation stopAllContainers
func makeOperationContainerStopAllContainersCmd() (*cobra.Command, error) {
	cmd := &cobra.Command{
		Use:   "stopAllContainers",
		Short: `TODO`,
		RunE:  runOperationContainerStopAllContainers,
	}

	if err := registerOperationContainerStopAllContainersParamFlags(cmd); err != nil {
		return nil, err
	}

	return cmd, nil
}

// runOperationContainerStopAllContainers uses cmd flags to call endpoint api
func runOperationContainerStopAllContainers(cmd *cobra.Command, args []string) error {
	appCli, err := makeClient(cmd, args)
	if err != nil {
		return err
	}
	// retrieve flag values from cmd and fill params
	params := container.NewStopAllContainersParams()
	if dryRun {

		logDebugf("dry-run flag specified. Skip sending request.")
		return nil
	}
	// make request and then print result
	msgStr, err := parseOperationContainerStopAllContainersResult(appCli.Container.StopAllContainers(params))
	if err != nil {
		return err
	}
	if !debug {

		fmt.Println(msgStr)
	}
	return nil
}

// registerOperationContainerStopAllContainersParamFlags registers all flags needed to fill params
func registerOperationContainerStopAllContainersParamFlags(cmd *cobra.Command) error {
	return nil
}

// parseOperationContainerStopAllContainersResult parses request result and return the string content
func parseOperationContainerStopAllContainersResult(resp0 *container.StopAllContainersOK, respErr error) (string, error) {
	if respErr != nil {

		var iRespD interface{} = respErr
		respD, ok := iRespD.(*container.StopAllContainersDefault)
		if ok {
			if !swag.IsZero(respD) && !swag.IsZero(respD.Payload) {
				msgStr, err := json.Marshal(respD.Payload)
				if err != nil {
					return "", err
				}
				return string(msgStr), nil
			}
		}

		// Non schema case: warning stopAllContainersOK is not supported

		return "", respErr
	}

	// warning: non schema response stopAllContainersOK is not supported by go-swagger cli yet.

	return "", nil
}
