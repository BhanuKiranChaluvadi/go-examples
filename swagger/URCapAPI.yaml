consumes:
    - application/json
produces:
    - application/json
schemes:
    - http
swagger: "2.0"
info:
    description: API description for URCaps.
    title: urcap API
    contact:
        email: swpl@universal-robots.com
        name: Universal Robots
        url: https://www.universal-robots.com/
    license:
        name: Apache '2.0'
        url: http://www.apache.org/licenses/LICENSE
    version: 1.0.0
host: localhost:8181
basePath: /api/v1
paths:
    /containers/{vendorID}/{urcapID}/{artifactName}:
        get:
            description: TODO
            tags:
                - container
            summary: Gets a container info by urcap ID's and artifactName
            operationId: getContainerById
            parameters:
                - type: string
                  description: vendorID of urcap defined in manifest
                  name: vendorID
                  in: path
                  required: true
                - type: string
                  description: urcapID of urcap defined in manifest
                  name: urcapID
                  in: path
                  required: true
                - name: artifactName
                  in: path
                  required: true
                  type: string
                  description: artifact name of container defined in manifest
            responses:
                "200":
                    description: A single container.
                    schema:
                        $ref: '#/definitions/container'
                default:
                    description: api error
                    schema:
                        $ref: '#/definitions/apiError'
    /containers/{vendorID}/{urcapID}/{artifactName}/portmapping:
        get:
            tags:
                - container
            summary: Port mapping of a container
            operationId: getContainerPortMappingById
            parameters:
                - in: path
                  required: true
                  type: string
                  description: vendorID of urcap defined in manifest
                  name: vendorID
                - type: string
                  description: urcapID of urcap defined in manifest
                  name: urcapID
                  in: path
                  required: true
                - type: string
                  description: artifact name of container defined in manifest
                  name: artifactName
                  in: path
                  required: true
            responses:
                "200":
                    description: Container Port Mapping.
                default:
                    description: api error
                    schema:
                        $ref: '#/definitions/apiError'
            description: Gets host port mapped to the container port
    /containers/{vendorID}/{urcapID}/{artifactName}/start:
        put:
            summary: Start a container
            operationId: startContainerById
            parameters:
                - name: vendorID
                  in: path
                  required: true
                  type: string
                  description: vendorID of urcap defined in manifest
                - type: string
                  description: urcapID of urcap defined in manifest
                  name: urcapID
                  in: path
                  required: true
                - type: string
                  description: artifact name of container defined in manifest
                  name: artifactName
                  in: path
                  required: true
            responses:
                "200":
                    description: OK
                default:
                    schema:
                        $ref: '#/definitions/apiError'
                    description: api error
            description: TODO
            tags:
                - container
    /urcaps/{vendorID}/{urcapID}:
        get:
            description: TODO
            tags:
                - urcap
            summary: Gets a urcap info by urcap ID's
            operationId: getUrcapById
            parameters:
                - name: vendorID
                  in: path
                  required: true
                  type: string
                  description: vendorID of urcap defined in manifest
                - required: true
                  type: string
                  description: urcapID of urcap defined in manifest
                  name: urcapID
                  in: path
            responses:
                "200":
                    description: A single urcap.
                    schema:
                        $ref: '#/definitions/manifest'
                default:
                    description: api error
                    schema:
                        $ref: '#/definitions/apiError'
        put:
            description: |
                This operation updates an exsisting urcap.
            tags:
                - urcap
            summary: Updates a urcap info by ID's
            operationId: updateUrcapById
            parameters:
                - type: string
                  description: vendorID of urcap defined in manifest
                  name: vendorID
                  in: path
                  required: true
                - description: urcapID of urcap defined in manifest
                  name: urcapID
                  in: path
                  required: true
                  type: string
            responses:
                "200":
                    description: Updated urcap.
                    schema:
                        $ref: '#/definitions/manifest'
                default:
                    description: api error
                    schema:
                        $ref: '#/definitions/apiError'
        delete:
            responses:
                "200":
                    schema:
                        $ref: '#/definitions/manifest'
                    description: Updated urcap.
                default:
                    description: api error
                    schema:
                        $ref: '#/definitions/apiError'
            description: |
                This operation uninstall a urcap.
            tags:
                - urcap
            summary: Deletes a urcaps info by ID's
            operationId: deleteUrcapById
            parameters:
                - type: string
                  description: vendorID of urcap defined in manifest
                  name: vendorID
                  in: path
                  required: true
                - type: string
                  description: urcapID of urcap defined in manifest
                  name: urcapID
                  in: path
                  required: true
    /artifacts/{artifactType}/info:
        get:
            tags:
                - artifact
            summary: Gets the urcap metadata from the resource path
            operationId: getArtifactMetadataByPath
            parameters:
                - enum:
                    - container
                    - polyscopeBundle
                    - webArchieve
                  type: string
                  description: The type of the artifact
                  name: artifactType
                  in: path
                  required: true
                - description: Path to the resource/artifact on host machine
                  name: artifactPath
                  in: query
                  required: true
                  type: string
            responses:
                "200":
                    description: URCap metadata
                    schema:
                        $ref: '#/definitions/metadata'
                default:
                    description: api error
                    schema:
                        $ref: '#/definitions/apiError'
            description: TODO
    /artifacts/{artifactType}/name:
        get:
            operationId: getArtifactActualNameByPath
            parameters:
                - enum:
                    - container
                    - polyscopeBundle
                    - webArchieve
                  type: string
                  description: The type of the artifact
                  name: artifactType
                  in: path
                  required: true
                - required: true
                  type: string
                  description: Path to the resource/artifact on host machine
                  name: artifactPath
                  in: query
            responses:
                "200":
                    description: artifact name
                    schema:
                        type: string
                default:
                    schema:
                        $ref: '#/definitions/apiError'
                    description: api error
            description: TODO
            tags:
                - artifact
            summary: Gets the actual name of an artifact from the resource path
    /containers/stop:
        put:
            tags:
                - container
            summary: Stops all containers
            operationId: stopAllContainers
            responses:
                "200":
                    description: Container Port Mapping.
                default:
                    description: api error
                    schema:
                        $ref: '#/definitions/apiError'
            description: TODO
    /containers/{vendorID}/{urcapID}/{artifactName}/status:
        put:
            tags:
                - container
            summary: Status of a container
            operationId: statusContainerById
            parameters:
                - in: path
                  required: true
                  type: string
                  description: vendorID of urcap defined in manifest
                  name: vendorID
                - in: path
                  required: true
                  type: string
                  description: urcapID of urcap defined in manifest
                  name: urcapID
                - type: string
                  description: artifact name of container defined in manifest
                  name: artifactName
                  in: path
                  required: true
            responses:
                "200":
                    description: OK
                default:
                    description: api error
                    schema:
                        $ref: '#/definitions/apiError'
            description: TODO
    /containers/{vendorID}/{urcapID}/{artifactName}/stop:
        put:
            description: TODO
            tags:
                - container
            summary: Stop a container
            operationId: stopContainerById
            parameters:
                - type: string
                  description: vendorID of urcap defined in manifest
                  name: vendorID
                  in: path
                  required: true
                - required: true
                  type: string
                  description: urcapID of urcap defined in manifest
                  name: urcapID
                  in: path
                - in: path
                  required: true
                  type: string
                  description: artifact name of container defined in manifest
                  name: artifactName
            responses:
                default:
                    description: api error
                    schema:
                        $ref: '#/definitions/apiError'
                "200":
                    description: OK
    /containers/{vendorID}/{urcapID}/{artifactName}/validate:
        get:
            description: TODO
            tags:
                - container
            summary: Validates container artifact presence
            operationId: validateContainerById
            parameters:
                - in: path
                  required: true
                  type: string
                  description: vendorID of urcap defined in manifest
                  name: vendorID
                - required: true
                  type: string
                  description: urcapID of urcap defined in manifest
                  name: urcapID
                  in: path
                - type: string
                  description: artifact name of container defined in manifest
                  name: artifactName
                  in: path
                  required: true
            responses:
                "200":
                    description: Container Port Mapping.
                default:
                    description: api error
                    schema:
                        $ref: '#/definitions/apiError'
    /urcaps:
        get:
            description: |
                This operation provides a view of installed urcaps's data in JSON.
            tags:
                - urcap
            summary: Gets all urcaps.
            operationId: getUrcaps
            responses:
                "200":
                    description: OK
                    schema:
                        type: array
                        items:
                            $ref: '#/definitions/manifest'
        post:
            operationId: addUrcap
            parameters:
                - type: file
                  description: |
                    The zipped urcapx file.
                  name: urcapxFile
                  in: formData
                  required: true
            responses:
                "201":
                    description: metadata
                    schema:
                        $ref: '#/definitions/manifest'
                default:
                    description: error response
                    schema:
                        $ref: '#/definitions/apiError'
            description: "This operation install urcaps from a zipped urcap file. This operation \nexpects zipped .urcapx file to be uploaded as form data.\n"
            consumes:
                - multipart/form-data
            tags:
                - urcap
            summary: Adds a new urcap
definitions:
    errorCode:
        properties:
            major:
                type: integer
                description: API context
            minor:
                description: error context
                type: integer
        type: object
    polyscopeBundle:
        properties:
            name:
                pattern: ^[a-zA-Z0-9._-]+$
                example: polyscope-ui
                description: "The name of the polyscope bundle. \n"
                type: string
                maxLength: !!float 27
                minLength: !!float 2
            bundle:
                description: The polyscope bundle path. Path to the jar file relative to the zipped urcap top folder.
                type: string
                pattern: ^[a-zA-Z0-9._-]+(\.jar$)
                example: polyscope-ui-1.0-SNAPSHOT.jar
        description: Configuration for PolyscopeBundle artifact
        type: object
        required:
            - bundle
            - name
    port:
        description: These details are used to establish the connection between the docker host and container
        type: object
        required:
            - containerPort
            - name
        properties:
            containerPort:
                description: This is the port number on the container. The container port number is mapped to port name on container host
                type: integer
                format: int32
                maximum: !!float 61000
                minimum: !!float 0
                example: !!float 40405
            name:
                type: string
                maxLength: !!float 27
                minLength: !!float 2
                pattern: ^[a-zA-Z0-9_-]+$
                example: xmlrpc
                description: This is logical port name on docker host. Port name is resolved to one of the available port number on the docker host and queried using rest api. The logical_port on docker host is mapped to containerPort on container
            protocol:
                description: Type of port mapping between the container host and container. TCP(Default)/UDP
                type: string
                default: tcp
                enum:
                    - udp
                    - tcp
    artifacts:
        type: object
        properties:
            webArchives:
                description: List of web archives
                type: array
                items:
                    $ref: '#/definitions/webArchive'
            containers:
                description: List of container artifacts
                type: array
                items:
                    $ref: '#/definitions/container'
            polyscopeBundles:
                description: List of osgi polyscope bundles
                type: array
                items:
                    $ref: '#/definitions/polyscopeBundle'
        description: All artifacts like containers, polyscopeBundle, webArchive that makes up an urcap.
    container:
        description: |
            Container artifact model
        type: object
        required:
            - image
            - name
        properties:
            ports:
                description: list of open ports on the container
                type: array
                items:
                    $ref: '#/definitions/port'
            volumeMounts:
                items:
                    $ref: '#/definitions/volumeMount'
                description: List of volumeMounts to persist data.
                type: array
            devices:
                type: array
                items:
                    $ref: '#/definitions/device'
                description: List of device to be mounted in container.
            environment:
                description: List of environment variables inside the container.
                type: array
                items:
                    $ref: '#/definitions/environmentVariable'
            hostaccess:
                enum:
                    - "true"
                    - yes
                    - on
                    - "1"
                    - "false"
                    - no
                    - off
                    - "0"
                description: Container can communicate with host process through hosthost.internal dns name. This setting requires special priviledge
                type: string
            image:
                description: The image name:tag to be loaded. The loaded image should be found at path name/name:tag
                type: string
                example: daemon-cpp:1.0
            ingress:
                $ref: '#/definitions/ingress'
            name:
                description: Name of the container artifact
                type: string
                example: daemon-cpp
    manifest:
        description: URCap Manifest Specification. The Manifest file is a YAML file defining a multi-artifacts based urcap application. The Manifest.yaml file is located on the top level directory/folder.
        type: object
        required:
            - apiVersion
            - metadata
        properties:
            apiVersion:
                description: "Version (major.minor.patch) of the Manifest specification used. Tools not implementing required version MUST reject the configuration file. \n"
                type: string
                pattern: ^[a-zA-Z0-9._-]+$
                x-nullable: false
                x-order: !!float 0
                example: 1.0.0
            artifacts:
                $ref: '#/definitions/artifacts'
            metadata:
                $ref: '#/definitions/metadata'
    metadata:
        required:
            - urcapID
            - vendorID
            - urcapName
            - vendorName
            - version
        properties:
            vendorName:
                maxLength: !!float 27
                minLength: !!float 4
                pattern: ^[a-zA-Z0-9_\-\s]+$
                x-nullable: false
                x-order: !!float 3
                example: Universal Robots
                description: Urcap name of this application. This Will be displayed on user interface.
                type: string
            version:
                type: string
                pattern: ^\d{1}.\d{1}.\d{1}$
                x-nullable: false
                x-order: !!float 2
                example: 1.0.0
                description: Urcap version (major.minor.patch)
            copyright:
                x-nullable: false
                x-order: !!float 7
                example: Copyright (c) 2009-2021 Universal Robots. All rights reserved.
                description: Specifies copy rights for the urcap
                type: string
            description:
                x-order: !!float 6
                example: Sample gripper URCap
                description: Short description of urcap
                type: string
                x-nullable: false
            license:
                description: License of various software/hardware used while developing the urcap
                type: string
                x-nullable: false
                x-order: !!float 8
                example: TODO
            urcapID:
                maxLength: !!float 27
                minLength: !!float 2
                pattern: ^[a-zA-Z0-9._-]+$
                x-nullable: false
                x-order: !!float 1
                example: dockerdaemon
                description: Urcap id for this application. The ID must be unique for each urcap application developed by a company (vendorID).
                type: string
            urcapName:
                example: Docker Daemon
                description: Urcap name of this application. This Will be displayed on user interface.
                type: string
                maxLength: !!float 20
                minLength: !!float 3
                pattern: ^[a-zA-Z0-9_\-\s]+$
                x-nullable: false
                x-order: !!float 5
            vendorID:
                description: Company urcap developer ID. The ID is shared among all urcap applications developed by company.
                type: string
                maxLength: !!float 27
                minLength: !!float 2
                pattern: ^[a-zA-Z0-9._-]+$
                x-nullable: false
                x-order: !!float 0
                example: universal-robots
        description: Metadata of the urcap
        type: object
    device:
        required:
            - device
        properties:
            description:
                example: Select the serial port with dongle atthed
                description: TODO
                type: string
            device:
                description: "The host device path : the containert device path. \nThe physical device mapping between host and container. The host part can contain regular expression if specific device is not known.\n"
                type: string
                pattern: ^(/[^/]+)+:(/[^/]+)+(:[rwm]+)?$
                example: /dev/ttyS[0-3]:/dev/serial:rw
            name:
                description: The name of mapped device. Logical name of device
                type: string
                example: Dongle interface
        description: container device. Adds host device to container
        type: object
    error:
        type: object
        properties:
            code:
                description: Error codes.This field contains a string succinctly identifying     the problem.
                type: string
                x-nullable: false
                x-order: !!float 0
                example: missing_field
            message:
                description: This field contain a plainly-written, developer-oriented explanation of the solution to the problem in complete, well-formed sentences.
                type: string
                x-go-type:
                    hints:
                        kind: interface
                    type: error
                x-nullable: false
                x-order: !!float 1
                example: The `first_name` field is required.
            more_info:
                example: https://docs.api.example.com/v2/users/create_user#first_name
                description: This field SHOULD contain a publicly-accessible URL where information about the error can be read in a web browser.
                type: string
                format: url
                x-nullable: false
                x-order: !!float 2
            target:
                $ref: '#/definitions/errorTarget'
        description: api error
    volumeMount:
        description: Use to mount volumes into container. Data can be persistent or temporary according to selected type
        type: object
        required:
            - mountPath
        properties:
            mountPath:
                description: "Absolute path for the data folders to be mounted on container. This folder is meant to have persistent data \n"
                type: string
                pattern: ^(/[^/]+)+(:(/[^/]+)+)?$
                example: /gripper/data
            type:
                description: Type of volume to mount. For tmpfs data will be lost following restart where as persistent will keep data until urcap is uninstalled.
                type: string
                enum:
                    - persistent
                    - tmpfs
                example: tmpfs
    webArchive:
        required:
            - folder
            - name
        properties:
            folder:
                maxLength: !!float 20
                minLength: !!float 3
                pattern: ^[a-zA-Z0-9._-]+$
                example: mywebarchive
                description: "Path of the folder with all web related pages. This path is relative to the zipped urcap top folder. \n"
                type: string
            masterIndex:
                description: Path to the main index pages for the front to load.
                type: string
            name:
                example: mywebarchive
                description: The name of the web archive
                type: string
                maxLength: !!float 27
                minLength: !!float 2
                pattern: ^[a-zA-Z0-9._-]+$
        description: An web archive contains a folder with all web related pages.
        type: object
    errorTarget:
        required:
            - name
            - value
        properties:
            name:
                example: field
                description: This field MUST contain field, parameter, or header
                type: string
                enum:
                    - field
                    - parameter
                    - header
                x-nullable: false
                x-order: !!float 0
            value:
                description: This field MUST contain the name of the problematic field (with dot-syntax if necessary), query parameter, or header.
                type: string
                x-nullable: false
                x-order: !!float 1
                example: username
        description: Error Target Model. This field MAY contain an error target model. Otherwise, it MUST be omitted.
        type: object
    ingress:
        description: Container ingress configuration. Automatically configure ingress path routing for ex. rest api
        type: object
        required:
            - name
            - port
        properties:
            masterIndex:
                description: The container should handle the master index.
                type: string
                example: /index
            name:
                pattern: ^[a-zA-Z0-9_-]+$
                example: rest-api
                description: The ingress rule name. Logical name of ingress rule.
                type: string
            port:
                example: !!float 80
                description: The container port number of http server. This is the port number on the container of http server
                type: integer
                format: uint32
                maximum: !!float 61000
                minimum: !!float 0
            protocol:
                example: websocket
                description: The ingress protocol. Add this setting to select between http and websocket - the later allowing connection upgrades
                type: string
                default: http
                enum:
                    - http
                    - https
                    - websocket
            proxyurl:
                pattern: ^/([a-zA-Z0-9/_-]*)$
                example: /shorturl
                description: The proxy url forwarded to container. Select between short urls and long urls arriving at the container backend. When short urls are selected the matching prefix is removed from the url before forwarding.
                type: string
                default: /original
    apiError:
        type: object
        required:
            - errorContext
            - errors
        properties:
            trace:
                example: 9daee671-916a-4678-850b-10b911f0236d
                description: The UUID to uniquely identifying the request
                type: string
                x-order: !!float 0
            description:
                description: This field contains description of the problem
                type: string
                x-order: !!float 4
            errorCode:
                $ref: '#/definitions/errorCode'
            errorContext:
                x-order: !!float 3
                example: installation_failed
                description: This field contains a snake case string succiently identifying the problem from api context.
                type: string
                x-nullable: false
            errors:
                description: List of errors
                type: array
                items:
                    $ref: '#/definitions/error'
            moreInfo:
                description: This filed contains a publicly-accessible URL where information about the error can be read in a web browser
                type: string
                format: url
                x-order: !!float 6
                example: https://docs.api.example.com/v2/urcaps/installation#corrupted_file
            resolve:
                example: Please download urcapx file again and try installing again or contact urcap developer
                description: This field explains a possible solution to the problem
                type: string
                x-order: !!float 5
            statusCode:
                type: integer
                format: uint16
                x-order: !!float 1
                example: !!float 500
                description: HTTP status code used for the response
    environmentVariable:
        type: object
        required:
            - name
            - value
        properties:
            name:
                pattern: ^[a-zA-Z0-9_]+$
                example: LOG_LEVEL
                description: The container environment variable name. Convention is to use capital letters with underscore delimiters.
                type: string
            value:
                pattern: ^.*$
                example: info
                description: The container environment variable value. Any configuration information required at runtime by urcap container.
                type: string
        description: Adds environment variables to the container
tags:
    - name: urcap
      description: Operations available on urcap
    - name: artifact
      description: Operations available on artifact
    - description: Operations available on container
      name: container
    - description: Operations available on web archive
      name: webArchive
    - description: Operations available on polyscope bundle
      name: polyscopeBundle
